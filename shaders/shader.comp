/* @file shader.comp

    Compute shader of the ray tracing program.
    SPDX-License-Identifier: WTFPL

*/
#version 450
#extension GL_GOOGLE_include_directive : enable // for include

#include "include/globals.glsl"
#include "include/structures.glsl"

layout (rgba32f, set = 0, binding = 0) uniform writeonly image2D OutputImage;

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

void main() {
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(OutputImage);
    vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
    vec3 pixel_center = pixel00_loc + (texelCoord.x * pixel_delta_u) + (texelCoord.y * pixel_delta_v);
    vec3 ray_direction = pixel_center - camera_center;
    ray r = ray(camera_center, ray_direction);
    color.rgb = ray_color(r);
    imageStore(OutputImage, texelCoord, color);
}
